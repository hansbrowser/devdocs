import{_ as n,c as s,o as a,a as t}from"./app.e3da9a89.js";const g='{"title":"Securing Web Applications and APIs","description":"","frontmatter":{},"headers":[{"level":2,"title":"Dataprotection","slug":"dataprotection"},{"level":2,"title":"Interacting with the Authentication System","slug":"interacting-with-the-authentication-system"},{"level":2,"title":"Session Management (1)","slug":"session-management-1"},{"level":2,"title":"Session Management (2)","slug":"session-management-2"},{"level":2,"title":"External Authentication (OpenIDConnect)","slug":"external-authentication-openidconnect"},{"level":2,"title":"API Authentication","slug":"api-authentication"},{"level":2,"title":"Call API","slug":"call-api"}],"relativePath":"identityserver/Securing.md","lastUpdated":1634462221718}',p={},o=t(`__VP_STATIC_START__<h1 id="securing-web-applications-and-apis" tabindex="-1">Securing Web Applications and APIs <a class="header-anchor" href="#securing-web-applications-and-apis" aria-hidden="true">#</a></h1><h2 id="dataprotection" tabindex="-1">Dataprotection <a class="header-anchor" href="#dataprotection" aria-hidden="true">#</a></h2><ul><li>data protection key used for cookies/antiforgerykey/tempdata a.o.</li><li>store key in a place where every scalable app can reach it.</li></ul><h2 id="interacting-with-the-authentication-system" tabindex="-1">Interacting with the Authentication System <a class="header-anchor" href="#interacting-with-the-authentication-system" aria-hidden="true">#</a></h2><div class="language-csharp"><pre><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IAuthenticationService</span>
<span class="token punctuation">{</span>
	<span class="token comment">// authenticate the specified schema</span>
	<span class="token return-type class-name">Task<span class="token punctuation">&lt;</span>AuthenticateResult<span class="token punctuation">&gt;</span></span> <span class="token function">AuthenticateAsync</span><span class="token punctuation">(</span><span class="token range operator">..</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// session management</span>
	<span class="token return-type class-name">Task</span> <span class="token function">SignInAsync</span><span class="token punctuation">(</span><span class="token range operator">..</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token return-type class-name">Task</span> <span class="token function">SignOutAsync</span><span class="token punctuation">(</span><span class="token range operator">..</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// signal that authentication is required</span>
	<span class="token return-type class-name">Task</span> <span class="token function">ChallengeAsync</span><span class="token punctuation">(</span><span class="token range operator">..</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">// signal that access is denied</span>
	<span class="token return-type class-name">Task</span> <span class="token function">ForbidAsync</span><span class="token punctuation">(</span><span class="token range operator">..</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="session-management-1" tabindex="-1">Session Management (1) <a class="header-anchor" href="#session-management-1" aria-hidden="true">#</a></h2><div class="language-csharp"><pre><code><span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ConfigureServices</span><span class="token punctuation">(</span><span class="token class-name">IServicesCollection</span> services<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	services<span class="token punctuation">.</span><span class="token function">AddAuthentication</span><span class="token punctuation">(</span><span class="token named-parameter punctuation">defaultScheme</span><span class="token punctuation">:</span> <span class="token string">&quot;cookies&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">.</span><span class="token function">AddCookie</span><span class="token punctuation">(</span><span class="token string">&quot;cookies&quot;</span><span class="token punctuation">,</span> options <span class="token operator">=&gt;</span>
	<span class="token punctuation">{</span>
		options<span class="token punctuation">.</span>LoginPath <span class="token operator">=</span> <span class="token string">&quot;/Account/Login&quot;</span><span class="token punctuation">;</span>
		options<span class="token punctuation">.</span>AccessDeniedPath <span class="token operator">=</span> <span class="token string">&quot;/Account/Denied&quot;</span><span class="token punctuation">;</span>

		options<span class="token punctuation">.</span>Cookie<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;myApp&quot;</span><span class="token punctuation">;</span>
		options<span class="token punctuation">.</span>Cookie<span class="token punctuation">.</span>Expiration <span class="token operator">=</span> TimeSpan<span class="token punctuation">.</span><span class="token function">FromHours</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		options<span class="token punctuation">.</span>SlidingExpiration <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

		options<span class="token punctuation">.</span>Cookie<span class="token punctuation">.</span>SameSite <span class="token operator">=</span> SameSiteMode<span class="token punctuation">.</span>Lax<span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="session-management-2" tabindex="-1">Session Management (2) <a class="header-anchor" href="#session-management-2" aria-hidden="true">#</a></h2><ul><li>Cookie contains <ul><li>Claims</li><li>Metadata</li></ul></li></ul><div class="language-cs"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> claims <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>Claim<span class="token punctuation">&gt;</span></span>
<span class="token punctuation">{</span>
	<span class="token keyword">new</span> <span class="token constructor-invocation class-name">Claim</span><span class="token punctuation">(</span><span class="token string">&quot;sub&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token keyword">new</span> <span class="token constructor-invocation class-name">Claim</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Bob&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token class-name"><span class="token keyword">var</span></span> ci <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ClaimsIdentity</span><span class="token punctuation">(</span>claims<span class="token punctuation">,</span> <span class="token string">&quot;password&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;role&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> props <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">AuthenticationProperties</span>
<span class="token punctuation">{</span>
	Items <span class="token operator">=</span>
	<span class="token punctuation">{</span>
		<span class="token punctuation">{</span><span class="token string">&quot;token&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;abc&quot;</span><span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">await</span> HttpContext<span class="token punctuation">.</span><span class="token function">SignInAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">ClaimsPrincipal</span><span class="token punctuation">(</span>ci<span class="token punctuation">)</span><span class="token punctuation">,</span> props<span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre></div><h2 id="external-authentication-openidconnect" tabindex="-1">External Authentication (OpenIDConnect) <a class="header-anchor" href="#external-authentication-openidconnect" aria-hidden="true">#</a></h2><div class="language-csharp"><pre><code>services<span class="token punctuation">.</span><span class="token function">AddAuthentication</span><span class="token punctuation">(</span>options <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
	options<span class="token punctuation">.</span>DefaultScheme <span class="token operator">=</span> <span class="token string">&quot;cookies&quot;</span><span class="token punctuation">;</span>
	options<span class="token punctuation">.</span>DefaultChallengeScheme <span class="token operator">=</span> <span class="token string">&quot;oidc&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">AddCookie</span><span class="token punctuation">(</span><span class="token string">&quot;cookies&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">AddOpenIdConnect</span><span class="token punctuation">(</span><span class="token string">&quot;oidc&quot;</span><span class="token punctuation">,</span> options <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
	options<span class="token punctuation">.</span>Authority <span class="token operator">=</span> <span class="token string">&quot;https://my.identityserver.nl&quot;</span><span class="token punctuation">;</span>
	options<span class="token punctuation">.</span>ClientId <span class="token operator">=</span> <span class="token string">&quot;server.hybrid&quot;</span><span class="token punctuation">;</span>
	options<span class="token punctuation">.</span>ClientSecret <span class="token operator">=</span> <span class="token string">&quot;secret&quot;</span><span class="token punctuation">;</span>

	options<span class="token punctuation">.</span>ResponseType <span class="token operator">=</span> <span class="token string">&quot;code id_token&quot;</span><span class="token punctuation">;</span>

	options<span class="token punctuation">.</span>Scope<span class="token punctuation">.</span><span class="token function">Clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	options<span class="token punctuation">.</span>Scope<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;openid&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	options<span class="token punctuation">.</span>Scope<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token string">&quot;api&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="api-authentication" tabindex="-1">API Authentication <a class="header-anchor" href="#api-authentication" aria-hidden="true">#</a></h2><ul><li>build-in support for JWT tokens</li><li><a href="https://github.com/IdentityModel/IdentityModel.AspNetCore.OAuth2Introspection" target="_blank" rel="noopener noreferrer">https://github.com/IdentityModel/IdentityModel.AspNetCore.OAuth2Introspection</a></li></ul><div class="language-csharp"><pre><code><span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ConfigureServices</span><span class="token punctuation">(</span><span class="token class-name">IServiceCollection</span> services<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	services<span class="token punctuation">.</span><span class="token function">AddAuthentication</span><span class="token punctuation">(</span><span class="token string">&quot;jwt&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">.</span><span class="token function">AddJwtBearer</span><span class="token punctuation">(</span><span class="token string">&quot;jwt&quot;</span><span class="token punctuation">,</span> options <span class="token operator">=&gt;</span>
	<span class="token punctuation">{</span>
		options<span class="token punctuation">.</span>Authority <span class="token operator">=</span> <span class="token string">&quot;https://my.identityserver.nl&quot;</span><span class="token punctuation">;</span>
		options<span class="token punctuation">.</span>Audience <span class="token operator">=</span> <span class="token string">&quot;api&quot;</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="call-api" tabindex="-1">Call API <a class="header-anchor" href="#call-api" aria-hidden="true">#</a></h2><div class="language-csharp"><pre><code><span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span>IActionResult<span class="token punctuation">&gt;</span></span> <span class="token function">CallApi</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token comment">// get token from the session (cookie, or something else....)</span>
	<span class="token class-name"><span class="token keyword">var</span></span> token <span class="token operator">=</span> HttpContext<span class="token punctuation">.</span><span class="token function">GetTokenAsync</span><span class="token punctuation">(</span><span class="token string">&quot;access_token&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token class-name"><span class="token keyword">var</span></span> client <span class="token operator">=</span> _httpClientFactory<span class="token punctuation">.</span><span class="token function">CreateClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	client<span class="token punctuation">.</span><span class="token function">SetBearerToken</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token class-name"><span class="token keyword">var</span></span> response <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">GetStringAsync</span><span class="token punctuation">(</span><span class="token string">&quot;https://my.api.nl/test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	ViewBag<span class="token punctuation">.</span>Json <span class="token operator">=</span> JArray<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">return</span> <span class="token function">View</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>__VP_STATIC_END__`,17),e=[o];function c(i,u,l,k,r,d){return a(),s("div",null,e)}var m=n(p,[["render",c]]);export{g as __pageData,m as default};
