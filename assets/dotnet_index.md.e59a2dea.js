import{_ as n,c as a,o as s,a as t}from"./app.898a861e.js";const g='{"title":"dotnet","description":"","frontmatter":{},"headers":[{"level":2,"title":"Running a .NET Core Generic Host App as a Windows Service","slug":"running-a-net-core-generic-host-app-as-a-windows-service"},{"level":2,"title":"HttpClientFactory","slug":"httpclientfactory"}],"relativePath":"dotnet/index.md","lastUpdated":1653835935266}',e={},o=t(`<h1 id="dotnet" tabindex="-1">dotnet <a class="header-anchor" href="#dotnet" aria-hidden="true">#</a></h1><ul><li><a href="https://gist.github.com/jongalloway/70e5373837534abe6c89e7ab3ec4efb5" target="_blank" rel="noopener noreferrer">Checklists</a></li></ul><h2 id="running-a-net-core-generic-host-app-as-a-windows-service" tabindex="-1">Running a .NET Core Generic Host App as a Windows Service <a class="header-anchor" href="#running-a-net-core-generic-host-app-as-a-windows-service" aria-hidden="true">#</a></h2><ul><li><a href="https://www.stevejgordon.co.uk/asp-net-core-first-look-at-global-routing-dispatcher" target="_blank" rel="noopener noreferrer">https://www.stevejgordon.co.uk/asp-net-core-first-look-at-global-routing-dispatcher</a></li></ul><h2 id="httpclientfactory" tabindex="-1">HttpClientFactory <a class="header-anchor" href="#httpclientfactory" aria-hidden="true">#</a></h2><ul><li><a href="http://ASP.NET" target="_blank" rel="noopener noreferrer">ASP.NET</a> Core 2.1</li><li><a href="https://www.stevejgordon.co.uk/introduction-to-httpclientfactory-aspnetcore" target="_blank" rel="noopener noreferrer">https://www.stevejgordon.co.uk/introduction-to-httpclientfactory-aspnetcore</a></li><li>Startup class setup HttpClient</li></ul><div class="language-csharp"><pre><code>service<span class="token punctuation">.</span><span class="token function">AddHttpClient</span><span class="token punctuation">(</span><span class="token string">&quot;api&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">AddTransientHttpErrorPolicy</span><span class="token punctuation">(</span>p <span class="token operator">=&gt;</span> p<span class="token punctuation">.</span><span class="token function">RetryAsync</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div><ul><li>Use HttpClient everywhere in code</li></ul><div class="language-csharp"><pre><code><span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Values <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token function">OnGet</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">FromServices</span></span><span class="token punctuation">]</span><span class="token class-name">IHttpClientFactory</span> factory<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token class-name"><span class="token keyword">var</span></span> client <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">CreateClient</span><span class="token punctuation">(</span><span class="token string">&quot;api&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	Values <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">GetStringAsync</span><span class="token punctuation">(</span><span class="token string">&quot;http://localhost:5000/Values&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,9),p=[o];function c(r,l,i,u,k,d){return s(),a("div",null,p)}var f=n(e,[["render",c]]);export{g as __pageData,f as default};
